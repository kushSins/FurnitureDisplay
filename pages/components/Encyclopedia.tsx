/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoader } from "@react-three/fiber";
import { TextureLoader } from "three";

type GLTFResult = GLTF & {
  nodes: {
    encyclopedia: THREE.Mesh;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null!);
  const { nodes } = useGLTF("/encyclopedia.glb") as GLTFResult;
  const [encyclopedia] = useLoader(TextureLoader, [
    "/textures/encyclopedia.jpg",
  ]);
  encyclopedia.flipY = false;
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="encyclopedia"
          geometry={nodes.encyclopedia.geometry}
          position={[3.16, 1.28, -1.53]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
        >
          <meshBasicMaterial
            attach="material"
            map={encyclopedia}
            side={THREE.DoubleSide}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/encyclopedia.glb");
