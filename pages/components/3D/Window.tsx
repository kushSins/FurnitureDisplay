/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Window: THREE.Mesh
    Window_1: THREE.Mesh
    Window_2: THREE.Mesh
    Window_3: THREE.Mesh
    Window_4: THREE.Mesh
  }
  materials: {
    Window_inside: THREE.MeshStandardMaterial
    Window_outside: THREE.MeshStandardMaterial
    Window_metal: THREE.MeshStandardMaterial
    Window_stone: THREE.MeshStandardMaterial
    Handle_inside: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null!)
  const { nodes, materials } = useGLTF('/window.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="window" position={[-1.08, -0.94, -6.67]} rotation={[-Math.PI, 0.01, -Math.PI]}>
        <mesh name="Window" geometry={nodes.Window.geometry} material={materials.Window_inside} />
        <mesh name="Window_1" geometry={nodes.Window_1.geometry} material={materials.Window_outside} />
        <mesh name="Window_2" geometry={nodes.Window_2.geometry} material={materials.Window_metal} />
        <mesh name="Window_3" geometry={nodes.Window_3.geometry} material={materials.Window_stone} />
        <mesh name="Window_4" geometry={nodes.Window_4.geometry} material={materials.Handle_inside} />
      </group>
    </group>
  )
}

useGLTF.preload('/window.glb')
